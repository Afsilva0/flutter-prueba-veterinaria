include: package:pedantic/analysis_options.yaml

analyzer:
  exclude: [build/**]
  errors:
    omit_local_variable_types: ignore
    prefer_collection_literals: ignore
linter:
  rules:
    - always_put_required_named_parameters_first
    - always_require_non_null_named_parameters    
    - annotate_overrides
    - avoid_bool_literals_in_conditional_expressions
    # - avoid_catches_without_on_clauses Descp,emtar cuando se apliquen los logs
    - avoid_catching_errors
    - avoid_empty_else
    - avoid_field_initializers_in_const_classes
    - avoid_implementing_value_types
    - avoid_init_to_null
    - avoid_js_rounded_ints
    - avoid_null_checks_in_equality_operators
    - avoid_print #-> cuando se creen los logs se debe descomentar esta opciÃ³n
    - avoid_relative_lib_imports
    # - avoid_renaming_method_parameters
    - avoid_returning_null
    - avoid_returning_null_for_future
    - avoid_returning_null_for_void
    - avoid_returning_this
    - avoid_setters_without_getters
    - avoid_slow_async_io
    - avoid_types_as_parameter_names
    - avoid_unused_constructor_parameters   
    - avoid_web_libraries_in_flutter
    - await_only_futures
    - camel_case_extensions
    - camel_case_types
    - cancel_subscriptions
    - close_sinks
    - comment_references
    - constant_identifier_names
    - control_flow_in_finally
    - curly_braces_in_flow_control_structures
    - directives_ordering
    - empty_catches
    - empty_constructor_bodies
    - empty_statements 
    - flutter_style_todos
    - hash_and_equals
    - implementation_imports
    - invariant_booleans
    - iterable_contains_unrelated_type
    - join_return_with_assignment
    - library_names
    - library_prefixes
    # - lines_longer_than_80_chars
    - list_remove_unrelated_type
    - literal_only_boolean_expressions
    - no_adjacent_strings_in_list
    - no_duplicate_case_values
    - non_constant_identifier_names
    - null_closures
    - one_member_abstracts
    - overridden_fields
    - package_names
    - package_prefixed_library_names
    - prefer_adjacent_string_concatenation
    - prefer_asserts_in_initializer_lists
    - prefer_conditional_assignment
    - prefer_const_declarations
    - prefer_constructors_over_static_methods
    - prefer_contains
    - prefer_equal_for_default_values
    - prefer_for_elements_to_map_fromIterable
    - prefer_initializing_formals
    - prefer_inlined_adds
    - prefer_is_not_operator
    - prefer_iterable_whereType
    - prefer_null_aware_operators
    - prefer_spread_collections
    - provide_deprecation_message
    - recursive_getters
    - slash_for_doc_comments
    - sort_pub_dependencies
    - sort_unnamed_constructors_first
    - test_types_in_equals
    - throw_in_finally
    - type_init_formals
    - unawaited_futures
    - unnecessary_await_in_return
    - unnecessary_brace_in_string_interps
    - unnecessary_const
    - unnecessary_getters_setters
    - unnecessary_lambdas
    - unnecessary_new
    - unnecessary_null_aware_assignments    
    - unnecessary_overrides
    - unnecessary_parenthesis
    - unnecessary_statements
    # - unnecessary_this -> identifica donde podemos quitar el this
    - unrelated_type_equality_checks
    - unsafe_html
    - use_rethrow_when_possible
    - use_string_buffers
    - use_to_and_as_if_applicable
    - valid_regexps
    - void_checks